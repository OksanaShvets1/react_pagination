{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pageNumbers","Array","from","length","_","index","handlePageClick","page","className","href","onClick","map","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","startIndex","endIndex","min","items","to","numbers","n","push","getNumbers","id","text","value","onChange","event","newPerPage","parseInt","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"8KAOaA,EAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EACFC,MAAMC,KAAK,CAAEC,OAAQN,IAAc,SAACO,EAAGC,GAAJ,OAAcA,EAAQ,KAEvDC,EAAkB,SAACC,GACnBA,IAASZ,GACXC,EAAaW,IAIjB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA+B,IAAhBb,EAAoB,WAAa,IAA7D,SACE,mBACE,UAAQ,WACRa,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBd,EACfe,QAAS,kBAAMJ,EAAgBX,EAAc,IAL/C,oBAUDK,EAAYW,KAAI,SAACJ,GAAD,OACf,oBAEEC,UAAS,oBAAeD,IAASZ,EAAc,SAAW,IAF5D,SAIE,mBACE,UAAQ,WACRa,UAAU,YACVC,KAAI,WAAMF,GACVG,QAAS,kBAAMJ,EAAgBC,IAJjC,SAMGA,KATEA,MAaT,oBAAIC,UAAS,oBAAeb,IAAgBE,EAAa,WAAa,IAAtE,SACE,mBACE,UAAQ,WACRW,UAAU,YACVC,KAAK,QACL,gBAAed,IAAgBE,EAC/Ba,QAAS,kBAAMJ,EAAgBX,EAAc,IAL/C,wBC/CKiB,EAAgB,WAC3B,IAGA,EAAsCC,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBmB,EAApB,KACA,EAAwCD,mBAHZ,GAG5B,mBAAOE,EAAP,KAAqBC,EAArB,KAaMC,GAActB,EAAc,GAAKoB,EAAe,EAChDG,EAAWpB,KAAKqB,IAAIxB,EAAcoB,EAlBrB,IAmBbK,ECzBD,SAAoBlB,EAAcmB,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIrB,EAAMqB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDkBOG,CAAWR,EAAYC,GAClCP,KAAI,SAACY,GAAD,MAAQ,CAAEG,GAAG,QAAD,OAAUH,GAAKI,KAAK,QAAD,OAAUJ,OAEhD,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,cAAC,EAAD,CACEf,MA3Ba,GA4BbC,QAASqB,EACTpB,YAAaA,EACbC,aAxBmB,SAACW,GACxBO,EAAeP,MA0Bb,mBAAGC,UAAU,OAAO,UAAQ,OAA5B,wBACWb,EADX,mBACiCsB,EADjC,cACiDC,EADjD,eAjCe,GAiCf,OAIA,sBAAKV,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVoB,MAAOb,EACPc,SAlCkB,SAACC,GAC3B,IAAMC,EAAaC,SAASF,EAAMG,OAAOL,MAAO,IAEhDd,EAAe,GACfE,EAAgBe,IAyBV,UAOE,wBAAQH,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOM,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,6BACGY,EAAMT,KAAI,SAACwB,GAAD,OACT,oBAAkB,UAAQ,OAA1B,SACGA,EAAKR,MADCQ,EAAKT,aE/DxBU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.5f5bb2c1.chunk.js","sourcesContent":["type PaginationProps = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage); // Загальна кількість сторінок\n  const pageNumbers\n    = Array.from({ length: totalPages }, (_, index) => index + 1); // Масив з номерами сторінок\n\n  const handlePageClick = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => handlePageClick(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {pageNumbers.map((page) => (\n        <li\n          key={page}\n          className={`page-item ${page === currentPage ? 'active' : ''}`}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePageClick(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={`page-item ${currentPage === totalPages ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages}\n          onClick={() => handlePageClick(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const totalItems = 42;\n  const defaultItemsPerPage = 5;\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(defaultItemsPerPage);\n\n  const handlePageChange = (page: React.SetStateAction<number>) => {\n    setCurrentPage(page);\n  };\n\n  const handlePerPageChange = (event: { target: { value: string; }; }) => {\n    const newPerPage = parseInt(event.target.value, 10);\n\n    setCurrentPage(1);\n    setItemsPerPage(newPerPage);\n  };\n\n  const startIndex = (currentPage - 1) * itemsPerPage + 1;\n  const endIndex = Math.min(currentPage * itemsPerPage, totalItems);\n  const items = getNumbers(startIndex, endIndex)\n    .map((n) => ({ id: `item-${n}`, text: `Item ${n}` }));\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <Pagination\n        total={totalItems}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex} - ${endIndex} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <ul>\n        {items.map((item) => (\n          <li key={item.id} data-cy=\"item\">\n            {item.text}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}